{
  "StartAt": "Check support level",
  "States": {
    "Check support level": {
      "Type": "Task",
      "Resource": "arn:aws:states:::lambda:invoke",
      "OutputPath": "$.Payload",
      "Parameters": {
        "Payload.$": "$",
        "FunctionName": "arn:aws:lambda:<REGION>:<ACCOUNT>:function:AlertingPingdomCheckServiceLevel:$LATEST"
      },
      "Retry": [
        {
          "ErrorEquals": [
            "Lambda.ServiceException",
            "Lambda.AWSLambdaException",
            "Lambda.SdkClientException",
            "Lambda.TooManyRequestsException"
          ],
          "IntervalSeconds": 2,
          "MaxAttempts": 6,
          "BackoffRate": 2
        }
      ],
      "Next": "Down/Up Check"
    },
    "Down/Up Check": {
      "Type": "Choice",
      "Choices": [
        {
          "Variable": "$.current_state",
          "StringEquals": "DOWN",
          "Next": "Wait 5 min"
        },
        {
          "Variable": "$.current_state",
          "StringEquals": "UP",
          "Next": "Check for existing StepFunction process"
        }
      ],
      "Default": "Fail"
    },
    "Check for existing StepFunction process": {
      "Type": "Task",
      "Resource": "arn:aws:states:::lambda:invoke",
      "OutputPath": "$.Payload",
      "Parameters": {
        "Payload.$": "$",
        "FunctionName": "arn:aws:lambda:<REGION>:<ACCOUNT>:function:AlertingPingdomCheckExecutions:$LATEST"
      },
      "Retry": [
        {
          "ErrorEquals": [
            "Lambda.ServiceException",
            "Lambda.AWSLambdaException",
            "Lambda.SdkClientException",
            "Lambda.TooManyRequestsException"
          ],
          "IntervalSeconds": 2,
          "MaxAttempts": 6,
          "BackoffRate": 2
        }
      ],
      "Next": "Check for pass on flag"
    },
    "Check for pass on flag": {
      "Type": "Choice",
      "Choices": [
        {
          "Variable": "$.pass_on",
          "BooleanEquals": true,
          "Next": "Send to Opsgenie"
        },
        {
          "Variable": "$.pass_on",
          "BooleanEquals": false,
          "Next": "Send to Jira"
        }
      ],
      "Default": "Fail"
    },
    "Send to Jira": {
      "Type": "Task",
      "Resource": "arn:aws:states:::lambda:invoke",
      "OutputPath": "$.Payload",
      "Parameters": {
        "Payload.$": "$",
        "FunctionName": "arn:aws:lambda:<REGION>:<ACCOUNT>:function:AlertingPingdomSNS:$LATEST"
      },
      "Retry": [
        {
          "ErrorEquals": [
            "Lambda.ServiceException",
            "Lambda.AWSLambdaException",
            "Lambda.SdkClientException",
            "Lambda.TooManyRequestsException"
          ],
          "IntervalSeconds": 2,
          "MaxAttempts": 6,
          "BackoffRate": 2
        }
      ],
      "End": true
    },
    "Wait 5 min": {
      "Type": "Wait",
      "Seconds": 300,
      "Next": "Send to Opsgenie"
    },
    "Send to Opsgenie": {
      "Type": "Task",
      "Resource": "arn:aws:states:::lambda:invoke",
      "OutputPath": "$.Payload",
      "Parameters": {
        "Payload.$": "$",
        "FunctionName": "arn:aws:lambda:<REGION>:<ACCOUNT>:function:AlertingPingdomOpsgenie:$LATEST"
      },
      "Retry": [
        {
          "ErrorEquals": [
            "Lambda.ServiceException",
            "Lambda.AWSLambdaException",
            "Lambda.SdkClientException",
            "Lambda.TooManyRequestsException"
          ],
          "IntervalSeconds": 2,
          "MaxAttempts": 6,
          "BackoffRate": 2
        }
      ],
      "Next": "Send to Jira"
    },
    "Fail": {
      "Type": "Fail"
    }
  }
}
